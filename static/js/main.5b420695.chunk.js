(this["webpackJsonpgoit-react-hw-04-hooks-phonebook"]=this["webpackJsonpgoit-react-hw-04-hooks-phonebook"]||[]).push([[0],{13:function(e,t,n){},15:function(e,t,n){"use strict";n.r(t);var a=n(1),r=n.n(a),c=n(6),o=n.n(c),s=(n(13),n(7)),u=n(2),i=n(0),l=function(e){var t=e.addContact,n=e.contacts,r=Object(a.useState)(""),c=Object(u.a)(r,2),o=c[0],s=c[1],l=Object(a.useState)(""),d=Object(u.a)(l,2),b=d[0],j=d[1],h=function(e){switch(e.target.name){case"name":s(e.target.value);break;case"number":j(e.target.value)}},m=function(){s(""),j("")};return Object(i.jsxs)("form",{onSubmit:function(e){e.preventDefault(),n.some((function(t){return t.name===e.target.name.value}))?alert("".concat(o," is already in contacts")):t({name:o,number:b}),m()},children:[Object(i.jsx)("input",{onChange:h,value:o,type:"text",name:"name",placeholder:"Name",pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan",required:!0}),Object(i.jsx)("input",{onChange:h,value:b,type:"tel",name:"number",placeholder:"Number",pattern:"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}",title:"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +",required:!0}),Object(i.jsx)("button",{type:"submit",children:"Add contact"})]})},d=function(e){var t=e.filter,n=e.value;return Object(i.jsx)("input",{onChange:n,value:t,type:"text",name:"filter",pattern:"^[a-zA-Z\u0430-\u044f\u0410-\u042f]+(([' -][a-zA-Z\u0430-\u044f\u0410-\u042f ])?[a-zA-Z\u0430-\u044f\u0410-\u042f]*)*$",title:"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan",required:!0})},b=function(e){var t=e.filterContacts,n=e.deleteContact;return Object(i.jsx)("ul",{children:t().map((function(e){var t=e.id,a=e.name,r=e.number;return Object(i.jsxs)("li",{children:[Object(i.jsxs)("p",{children:[a,": ",r]}),Object(i.jsx)("button",{onClick:function(){return n(t)},type:"button",children:"Delete"})]},t)}))})},j=n(8),h="contacts",m=function(){var e=Object(a.useState)([]),t=Object(u.a)(e,2),n=t[0],r=t[1],c=Object(a.useState)(""),o=Object(u.a)(c,2),m=o[0],f=o[1];Object(a.useEffect)((function(){var e=function(e){try{return JSON.parse(localStorage.getItem(e))}catch(t){return null}}(h);e&&r(e)}),[]),Object(a.useEffect)((function(){!function(e,t){try{localStorage.setItem(e,JSON.stringify(t))}catch(n){return null}}(h,n)}),[n]);return Object(i.jsxs)("div",{children:[Object(i.jsx)("h1",{children:"Phonebook"}),Object(i.jsx)(l,{contacts:n,addContact:function(e){var t=e.name,n=e.number,a={id:Object(j.a)(5),name:t,number:n};r((function(e){return[].concat(Object(s.a)(e),[a])}))}}),Object(i.jsx)("h2",{children:"Contacts"}),Object(i.jsx)(d,{filter:m,value:function(e){f(e.target.value)}}),Object(i.jsx)(b,{contacts:n,filterContacts:function(){return n.filter((function(e){return e.name.toLowerCase().includes(m.toLowerCase())}))},deleteContact:function(e){return r((function(t){return t.filter((function(t){return t.id!==e}))}))}})]})};o.a.render(Object(i.jsx)(r.a.StrictMode,{children:Object(i.jsx)(m,{})}),document.getElementById("root"))}},[[15,1,2]]]);
//# sourceMappingURL=main.5b420695.chunk.js.map